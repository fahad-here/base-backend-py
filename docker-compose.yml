version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - xpack.security.authc.token.enabled=true
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - xpack.security.enrollment.enabled=true
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - app_network
    command: >
      /bin/sh -c "
        /usr/local/bin/docker-entrypoint.sh elasticsearch &
        while ! curl -s http://localhost:9200 >/dev/null; do sleep 1; done;
        curl -X POST -u elastic:${ELASTICSEARCH_PASSWORD} 'http://localhost:9200/_security/user/kibana_system/_password' -H 'Content-Type: application/json' -d '{\"password\":\"${ELASTICSEARCH_PASSWORD}\"}'
        wait
      "

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=none
      - XPACK_SECURITY_ENABLED=true
      - XPACK_ENCRYPTEDFIELD_ENCRYPTION_KEY=SOMETHING_AT_LEAST_32_CHARACTERS
      - XPACK_REPORTING_ENCRYPTIONKEY=SOMETHING_AT_LEAST_32_CHARACTERS
      - XPACK_SECURITY_ENCRYPTIONKEY=SOMETHING_AT_LEAST_32_CHARACTERS
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app_network
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5673:5672"    # AMQP protocol port
      - "15673:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  rabbitmq_data: